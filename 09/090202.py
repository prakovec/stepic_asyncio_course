"""
Мы можем использовать менеджер контекста async with для автоматического снятия блокировки с ресурса
"""

import asyncio

# Создание объекта Lock
lock = asyncio.Lock()

# Определение корутины "my_task" с аргументом "task_id"
async def my_task(task_id):

    # Вывод сообщения о том, что задача ждет блокировки
    print(f"Задача {task_id} ожидает блокировки с помощью Lock")

    # Запускаем менеджер контекста with с Lock
    async with lock:
        # Вывод сообщения о том, что задача получила блокировку
        print(f"Задача {task_id} получила блокировку")

        # Остановка выполнения корутины на 2 секунды
        await asyncio.sleep(2)

        # Вывод сообщения о том, что задача освобождает блокировку
    print(f"Задача {task_id} блокировка снята")


# Определение главной корутины "main"
async def main():

    # Создание списка задач из 5 вызовов "my_task"
    tasks = [asyncio.create_task(my_task(i)) for i in range(5)]

    # Ожидание выполнения всех задач
    await asyncio.gather(*tasks)

# Запуск главной корутины
asyncio.run(main())