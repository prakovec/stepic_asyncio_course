import asyncio


sem = asyncio.Semaphore(3)  # Семафоры используются для ограничения одновременно выполняемых задач до указанного количества (в данном случае до трех)

async def task(id):
    async with sem:  # Контекстный менеджер используется для автоматического освобождения ресурсов после использования
        print(f'Задача {id} начала выполнение')  # Информируем о начале выполнения задачи
        await asyncio.sleep(1)  # Имитируем работу задачи, приостанавливая выполнение на 1 секунду
        print(f'Задача {id} завершила выполнение')  # Информируем о завершении выполнения задачи


async def main():
    tasks = [task(i) for i in range(50)]  # Создаем список из 50 задач
    await asyncio.gather(*tasks)  # Используем asyncio.gather для одновременного выполнения всех задач

# Запускаем все задачи
asyncio.run(main())